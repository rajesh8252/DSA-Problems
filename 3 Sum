import java.util.*;
public class Solution {
    public static List< List < Integer > > triplet(int n, int []arr) {
        Arrays.sort(arr);
        List<List<Integer>> ans=new ArrayList<>();
        for(int i=0;i<n;i++)
        {
            if (i != 0 && arr[i] == arr[i - 1]) continue;
            int low=i+1;
            int high=arr.length-1;
            while(low<high)
            {
                int sum=arr[i]+arr[low]+arr[high];
                if(sum<0)
                {
                    low++;
                    //while(low<high && arr[high]==arr[high-1])high--;   
                }
                else if(sum>0)
                {
                    high--;
                   //while(low<high && arr[low]==arr[low+1])low++;
                }
                else
                {
                    List<Integer> lst=Arrays.asList(arr[i],arr[low],arr[high]);
                    ans.add(lst);
                    low++;
                    high--;
                    while(low<high && arr[low-1]==arr[low])low++;
                    while(low<high && arr[high+1]==arr[high])high--;    
                }
            }
            
           
        }
        return ans;
    }
}
