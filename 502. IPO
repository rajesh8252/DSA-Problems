class Solution {
    public int findMaximizedCapital(int k, int w, int[] p, int[] c) {
        PriorityQueue<int[]> minC=new PriorityQueue<>((a,b)->a[0]-b[0]);
        PriorityQueue<Integer> maxP=new PriorityQueue<>((a,b)->b-a);

        for(int i=0;i<p.length;i++)
        {
            minC.add(new int[]{c[i],p[i]});
        } 
        while(k-- > 0)
        {
            while(!minC.isEmpty() && minC.peek()[0]<=w)
            {
                maxP.add(minC.poll()[1]);
            }
            if(maxP.isEmpty())
            {
                break;
            }
            w+=maxP.poll();
        }
        return w;
    }
}
