public class Solution {
    public static ArrayList<ArrayList<Integer>> findTriplets(int[] arr, int n, int k) {
        Arrays.sort(arr);
        ArrayList<ArrayList<Integer>> lst = new ArrayList<>();
        
        for (int i = 0; i < n - 2; i++) {
            if (i == 0 || (i > 0 && arr[i] != arr[i - 1])) {
                int low = i + 1;
                int high = n - 1;
                while (low < high) {
                    int sum = arr[i] + arr[low] + arr[high];
                    if (sum == k) {
                        ArrayList<Integer> triplet = new ArrayList<>();
                        triplet.add(arr[i]);
                        triplet.add(arr[low]);
                        triplet.add(arr[high]);
                        lst.add(triplet);

                        // Move low and high pointers to skip duplicates
                        while (low < high && arr[low] == arr[low + 1]) low++;
                        while (low < high && arr[high] == arr[high - 1]) high--;

                        low++;
                        high--;
                    } else if (sum < k) {
                        low++;
                    } else {
                        high--;
                    }
                }
            }
        }
        return lst;
    }
}
